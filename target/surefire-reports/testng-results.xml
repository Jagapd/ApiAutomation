<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="All Test Suite" duration-ms="81873" started-at="2020-07-05T10:07:15Z" finished-at="2020-07-05T10:08:37Z">
    <groups>
    </groups>
    <test name="E2E TestCases" duration-ms="81873" started-at="2020-07-05T10:07:15Z" finished-at="2020-07-05T10:08:37Z">
      <class name="testcases.E2ETestCases">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testcases.E2ETestCases@32709393]" name="setUp" is-config="true" duration-ms="365" started-at="2020-07-05T10:07:15Z" finished-at="2020-07-05T10:07:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="2570" started-at="2020-07-05T10:07:15Z" finished-at="2020-07-05T10:07:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyAllCarsAreAvailableForBookingOnceDestinationIsReached(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyAllCarsAreAvailableForBookingOnceDestinationIsReached" duration-ms="15043" started-at="2020-07-05T10:07:18Z" data-provider="data" finished-at="2020-07-05T10:07:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllCarsAreAvailableForBookingOnceDestinationIsReached -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1603" started-at="2020-07-05T10:07:33Z" finished-at="2020-07-05T10:07:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1467" started-at="2020-07-05T10:07:34Z" finished-at="2020-07-05T10:07:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyAllocatedCarIsAvailableForBookingAfterReachingDestination(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyAllocatedCarIsAvailableForBookingAfterReachingDestination" duration-ms="9594" started-at="2020-07-05T10:07:36Z" data-provider="data" finished-at="2020-07-05T10:07:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllocatedCarIsAvailableForBookingAfterReachingDestination -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="2155" started-at="2020-07-05T10:07:45Z" finished-at="2020-07-05T10:07:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1430" started-at="2020-07-05T10:07:48Z" finished-at="2020-07-05T10:07:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyBookAPIWithInvalidToken(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyBookAPIWithInvalidToken" duration-ms="1956" started-at="2020-07-05T10:07:49Z" data-provider="data" finished-at="2020-07-05T10:07:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBookAPIWithInvalidToken -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="3467" started-at="2020-07-05T10:07:51Z" finished-at="2020-07-05T10:07:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="2422" started-at="2020-07-05T10:07:54Z" finished-at="2020-07-05T10:07:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyBookApiReturnsEmptyResponseWhenNoCarIsAvailable(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyBookApiReturnsEmptyResponseWhenNoCarIsAvailable" duration-ms="10028" started-at="2020-07-05T10:07:57Z" data-provider="data" finished-at="2020-07-05T10:08:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBookApiReturnsEmptyResponseWhenNoCarIsAvailable -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="3501" started-at="2020-07-05T10:08:07Z" finished-at="2020-07-05T10:08:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1599" started-at="2020-07-05T10:08:10Z" finished-at="2020-07-05T10:08:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyBookApiWithInvalidRequestBody(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyBookApiWithInvalidRequestBody" duration-ms="2011" started-at="2020-07-05T10:08:12Z" data-provider="data" finished-at="2020-07-05T10:08:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBookApiWithInvalidRequestBody -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1308" started-at="2020-07-05T10:08:14Z" finished-at="2020-07-05T10:08:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1309" started-at="2020-07-05T10:08:15Z" finished-at="2020-07-05T10:08:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyBookApiWithInvalidRequestBody(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyBookApiWithInvalidRequestBody" duration-ms="1255" started-at="2020-07-05T10:08:17Z" data-provider="data" finished-at="2020-07-05T10:08:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-232424214234314]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBookApiWithInvalidRequestBody -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="2582" started-at="2020-07-05T10:08:18Z" finished-at="2020-07-05T10:08:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1321" started-at="2020-07-05T10:08:20Z" finished-at="2020-07-05T10:08:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyResetApiWithInvalidHeader()[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyResetApiWithInvalidHeader" duration-ms="1278" started-at="2020-07-05T10:08:22Z" finished-at="2020-07-05T10:08:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetApiWithInvalidHeader -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1319" started-at="2020-07-05T10:08:23Z" finished-at="2020-07-05T10:08:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1312" started-at="2020-07-05T10:08:24Z" finished-at="2020-07-05T10:08:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyTickApiWithInvalidHeader()[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyTickApiWithInvalidHeader" duration-ms="1356" started-at="2020-07-05T10:08:26Z" finished-at="2020-07-05T10:08:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTickApiWithInvalidHeader -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1351" started-at="2020-07-05T10:08:27Z" finished-at="2020-07-05T10:08:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1327" started-at="2020-07-05T10:08:28Z" finished-at="2020-07-05T10:08:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyUserIsAllocatedCar(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyUserIsAllocatedCar" duration-ms="1328" started-at="2020-07-05T10:08:30Z" data-provider="data" finished-at="2020-07-05T10:08:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAllocatedCar -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1340" started-at="2020-07-05T10:08:31Z" finished-at="2020-07-05T10:08:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1524" started-at="2020-07-05T10:08:32Z" finished-at="2020-07-05T10:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="verifyUserIsAllocatedCar(int, int, int, int)[pri:0, instance:testcases.E2ETestCases@32709393]" name="verifyUserIsAllocatedCar" duration-ms="1700" started-at="2020-07-05T10:08:34Z" data-provider="data" finished-at="2020-07-05T10:08:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAllocatedCar -->
        <test-method status="PASS" signature="resetCarData()[pri:0, instance:testcases.E2ETestCases@32709393]" name="resetCarData" is-config="true" duration-ms="1386" started-at="2020-07-05T10:08:36Z" finished-at="2020-07-05T10:08:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCarData -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.E2ETestCases@32709393]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-07-05T10:08:37Z" finished-at="2020-07-05T10:08:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.E2ETestCases -->
    </test> <!-- E2E TestCases -->
  </suite> <!-- All Test Suite -->
</testng-results>
